spring:
  application:
    name: prometheus-rest
  cloud:
    config:
      server:
        git:
          uri: file://home/long/Desktop/repositories/config-repos
          default-label: master
#  profiles:
#    active: dev
#  config:
#    import: optional:configserver:https://localhost:8081/
  datasource:
    url: jdbc:oracle:thin:@//10.40.3.1:1521/oracle
    username: prometheus
    password: Ld201199
    driver-class-name: oracle.jdbc.OracleDriver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.Oracle12cDialect
#  kafka:
#    properties:
#      schema.registry.url: http://127.0.0.1:8081
#    bootstrap-servers:
#      - 192.168.1.3:9092
#    consumer:
#      group-id: prometheus
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#database:
#  host: 10.40.3.1
#  port: 1521
#  username: prometheus
#  password: Ld201199
#  service: oracle
#  schema: prometheus
#springdoc:
#  api-docs:
#    path: /api-docs
#  swagger-ui:
#    path: /
#logging:
#  level:
#    org:
#      springframework:
#        boot:
#          autoconfigure: debug
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#  instance:
#    preferIpAddress: true
#server:
#  port: 8000
#  springdoc.api-docs.path=/api-docs
#  springdoc.swagger-ui.path=/
#  logging.level.org.springframework.boot.autoconfigure=debug
#broker:
#  host: 192.168.1.3
#  port: 1883
#
#  debug=true
#  server.port=${PORT:8000}
#  kafka.bootstrapAddress=192.168.1.3:9092
#  spring.kafka.bootstrap-servers=192.168.1.3:9092
#  spring.kafka.consumer.group-id=prometheus